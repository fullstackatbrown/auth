openapi: "3.0.2"
info:
  title: Auth API
  version: "1.0"

servers:
  - url: http://localhost:8000/v1
    description: Local development server
  - url: https://auth.up.railway.app/v1
    description: Remote development server

paths:
  /auth/google/login:
    get:
      description: ""
      tags: [auth]
      parameters: []
      responses:
        "200":
          description: OK
  /auth/user:
    get:
      description: ""
      tags: [auth]
      parameters: []
      responses:
        "200":
          description: OK
  /auth/status:
    get:
      description: ""
      tags: [auth]
      parameters: []
      responses:
        "200":
          description: OK
  /auth/logout:
    get:
      description: ""
      tags: [auth]
      parameters: []
      responses:
        "200":
          description: OK
  /auth/avatars/{avatarId}:
    get:
      description: ""
      tags: [auth]
      parameters:
        - name: avatarId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK

  /users:
    get:
      description: "List all users with the given email."
      tags: [users]
      parameters:
        - name: email
          in: query
          description: "The email of the user to search for"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{userId}:
    delete:
      description: "Delete a user"
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
  /users/{userId}/profile:
    get:
      description: "Get a user's profile."
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
    patch:
      description: "Update a user's profile."
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /users/{userId}/roles:
    get:
      description: "Get a user's roles."
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
    post:
      description: ""
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                role:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
    delete:
      description: ""
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: domain
          in: query
          description: "The domain of the role to remove from the user."
          required: true
          schema:
            type: string
        - name: role
          in: query
          description: "The role to remove from the user."
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content

  /assignments:
    get:
      description: "List all assignments for a given email."
      tags: [assignments]
      parameters:
        - name: email
          in: query
          description: "The email to search for."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Assignment"
    post:
      description: "Create an assignment."
      tags: [assignments]
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assignment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assignment"
  /assignments/{assignmentId}:
    patch:
      description: "Update an assignment."
      tags: [assignments]
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assignment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assignment"
    delete:
      description: "Delete an assignment by ID."
      tags: [assignments]
      parameters:
        - name: assignmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content

  /domains:
    get:
      description: ""
      tags: [domains]
      parameters:
        - name: name
          in: query
          description: "The name of the domain to search for."
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    post:
      description: ""
      tags: [domains]
      parameters: []
      responses:
        "200":
          description: OK
  /domains/{domainId}:
    get:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    patch:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    delete:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
  /domains/{domainId}/roles:
    get:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    post:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    delete:
      description: ""
      tags: [domains]
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK

components:
  schemas:
    User:
      type: object
      required:
        - id
        - googleId
        - profile
        - roles
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        googleId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        profile:
          $ref: "#/components/schemas/Profile"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    Profile:
      type: object
      required:
        - name
        - email
        - pronouns
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: johndoe@example.com
        pronouns:
          type: string
          example: he/him
    Role:
      type: object
      required:
        - domain
        - role
      properties:
        domain:
          type: string
          example: cs200
        role:
          type: string
          example: uta
    Assignment:
      type: object
      required:
        - email
        - role
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        email:
          type: string
          example: johndoe@example.com
        role:
          $ref: "#/components/schemas/Role"
